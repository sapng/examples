The Neo4j - Datastore Graph IMDB Example

	Imagine a number of actors, acting in Movies and thus forming a graph of relationships between Actors and Movies. The 
	Spring Datastore Graph project provides an annotation-based approach to map objects onto Neo4j. The current annotations 
	supported (still subject to change) are:
	
	* @NodeEntity - class annotation for POJOs backed by a graph node.
	
	* @RelationshipEntity - class annotation for POJOs containing relationship properties.
	
	* @GraphProperty - field annotation used to specify indexing.
	
	* @RelatedTo - for fields denoting relationships (either one-to-one or one-to-many).
		
	* @StartNode - the start node for a @GraphRelationship..
	
	* @EndNode - the end node for a @GraphRelationship.

	In order to persist objects in Spring into Neo4j, simply do something like this (the full code is available over at the 
	{{{https://github.com/neo4j-examples/spring-datastore-graph-imdb} Spring Datastore Graph IMDB example}}:

%{source-code|snippet=MovieClass|file=src/main/java/org/neo4j/examples/imdb/domain/Movie.java}

	and the Actor class,

%{source-code|snippet=ActorClass|file=src/main/java/org/neo4j/examples/imdb/domain/Actor.java}

	This will produce something like {{{https://neo4j.com/docs/} this graph}}